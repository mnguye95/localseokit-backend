name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk

env:
  EB_PACKAGE_S3_BUCKET_NAME : "localseokit-bucket"
  EB_APPLICATION_NAME       : "localseokit"
  EB_ENVIRONMENT_NAME       : "localseokit-env"
  DEPLOY_PACKAGE_NAME       : "localseokit-${{ github.sha }}.zip"
  AWS_REGION                : "us-west-1"

on: 
  push:
    branches:
      main

jobs:
  CI-Pipeline:
    runs-on  : ubuntu-latest
    steps:
      - name : Git clone repository
        uses : actions/checkout@v1

      - name : Create ZIP deploment package
        run  : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

      - name : Configure my AWS Credentials
        uses : aws-actions/configure-aws-credentials@v1
        with :
            aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key : ${{ secrets.AWS_SECRET_KEY }}
            aws-region            : ${{ env.AWS_REGION }}

      - name : Copy Deployment Package to S3 Bucket
        run  : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

      - name : Print Completion Message
        run  : echo "CI Pipeline successfully completed."

   CD-Pipeline:
    runs-on   : ubuntu-latest
    
    steps: 
      - name : Configure my AWS Credentials
        uses : aws-actions/configure-aws-credentials@v1
        with :
            aws-access-key-id     : ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key : ${{ secrets.AWS_SECRET_KEY }}
            aws-region            : ${{ env.AWS_REGION }}

      - name : Create new ElasticBeanstalk Application Version
        run  : |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME }} \
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --version-label "Ver-${{  github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"

      - name : Deploy new Application Version
        run  : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
      
      - name : Print Completion Message
        run  : echo "CD Pipeline successfully completed."